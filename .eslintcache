[{"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/index.js":"1","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/App.js":"2","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/baseURL.js":"3","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/RouterSetup.js":"4","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Error/Error.js":"5","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Login/Login.js":"6","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Dashboard/Dashboard.js":"7","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Modals/TemplateModal.js":"8","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Signup/Signup.js":"9","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Signin/Signin.js":"10","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/PageTemplate/PageTemplate.js":"11","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Modals/AuthorizationModal.js":"12","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/EditUser/EditUser.js":"13"},{"size":239,"mtime":1611899449928,"results":"14","hashOfConfig":"15"},{"size":602,"mtime":1612272349038,"results":"16","hashOfConfig":"15"},{"size":183,"mtime":1612146978881,"results":"17","hashOfConfig":"15"},{"size":1012,"mtime":1611986354485,"results":"18","hashOfConfig":"15"},{"size":262,"mtime":1611832142808,"results":"19","hashOfConfig":"15"},{"size":383,"mtime":1611986191477,"results":"20","hashOfConfig":"15"},{"size":6719,"mtime":1612243725773,"results":"21","hashOfConfig":"15"},{"size":1005,"mtime":1611832142808,"results":"22","hashOfConfig":"15"},{"size":6755,"mtime":1611999942851,"results":"23","hashOfConfig":"15"},{"size":3931,"mtime":1612273103260,"results":"24","hashOfConfig":"15"},{"size":4142,"mtime":1612245020073,"results":"25","hashOfConfig":"15"},{"size":1123,"mtime":1611977398266,"results":"26","hashOfConfig":"15"},{"size":8356,"mtime":1611992895509,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1nedxq9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/index.js",[],["59","60"],"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/App.js",["61","62"],"import React from \"react\";\nimport \"./App.css\";\nimport RouterSetup from \"./RouterSetup\";\nimport axios from \"axios\";\nimport {\n  startingPartGO,\n  endingPartGO,\n  startingPartPHP,\n  endingPartPHP,\n} from \"./baseURL\";\n\naxios.interceptors.request.use(\n  function (config) {\n    config.url = startingPartPHP + config.url + endingPartPHP;\n    // config.url = startingPartGO + config.url + endingPartGO;\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <RouterSetup />\n    </div>\n  );\n};\n\nexport default App;\n","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/baseURL.js",[],"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/RouterSetup.js",[],"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Error/Error.js",[],"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Login/Login.js",[],"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Dashboard/Dashboard.js",["63","64"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport \"./Dashboard.css\";\nimport TemplateModal from \"../Modals/TemplateModal\";\nimport AuthorizationModal from \"../Modals/AuthorizationModal\";\n\nconst Dashboard = () => {\n  //Constants and Variables\n  const history = useHistory();\n  const location = useLocation();\n  const token = location.state && location.state.token;\n\n  //States\n  const [image, setImage] = useState(null);\n  const [sepImage, setSepImage] = useState(\"\");\n  const [allImages, setAllImages] = useState(\n    (location.state && location.state.allImages) || []\n  );\n  const [filenames, setFilenames] = useState(\n    (location.state && location.state.filenames) || []\n  );\n  const [modal, setModal] = useState({\n    isShown: false,\n    ModalTitle: \"\",\n    ModalBody: \"\",\n  });\n\n  const [authmodal, setAuthModal] = useState({\n    isShown: false,\n    ModalTitle: \"\",\n    ModalBody: \"\",\n  });\n  const [counter, setCounter] = useState(0);\n\n  //Handlers\n  const addImageHandler = async () => {\n    if (image === null) {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Choose an Image...\",\n        ModalBody: \"Please upload an image to proceed...\",\n      });\n      return;\n    }\n\n    var formData = new FormData();\n    formData.append(\"imagefile\", image);\n    formData.append(\"token\", token);\n\n    try {\n      const response = await axios({\n        url: \"/imageupload\",\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        data: formData,\n      });\n\n      if (response.data.status === \"failure\") {\n        setModal({\n          isShown: true,\n          ModalTitle: response.data.ModalTitle,\n          ModalBody: response.data.ModalBody,\n        });\n      } else {\n        const arraylength = allImages.length;\n        const imagefile = await fetchImage(response.data.filename);\n\n        var extension = response.data.filename.split(\".\")[1];\n        setAllImages([\n          ...allImages,\n          \"data:image/\" + extension + \";base64,\" + imagefile.imagedata,\n        ]);\n        setFilenames([...filenames, response.data.filename]);\n        setCounter(arraylength);\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        setAuthModal({\n          isShown: true,\n          ModalTitle: error.response.data.ModalTitle,\n          ModalBody: error.response.data.ModalBody,\n        });\n      } else {\n        setModal({\n          isShown: true,\n          ModalTitle: error.response.data.ModalTitle,\n          ModalBody: error.response.data.ModalBody,\n        });\n      }\n    }\n\n    setSepImage(\"\");\n    setImage(null);\n  };\n\n  const fetchImage = async (filename) => {\n    var formData = new FormData();\n    formData.append(\"filename\", filename);\n    formData.append(\"token\", token);\n\n    const response = await axios({\n      url: \"/getsingleimage\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      data: formData,\n    });\n\n    return response.data;\n  };\n\n  const deleteImageHandler = async () => {\n    try {\n      if (filenames.length == 0) return;\n\n      var formData = new FormData();\n      formData.append(\"filename\", filenames[counter]);\n      formData.append(\"token\", token);\n\n      const response = await axios({\n        url: \"/deletesingleimage\",\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        data: formData,\n      });\n\n      setModal({\n        isShown: true,\n        ModalTitle: response.data.ModalTitle,\n        ModalBody: response.data.ModalBody,\n      });\n\n      const newFileNames = filenames.filter((file, ind) => ind !== counter);\n      const newAllImages = allImages.filter((image, ind) => ind !== counter);\n\n      history.replace({\n        pathname: \"/dashboard\",\n        state: {\n          ...location.state,\n          filenames: newFileNames,\n          allImages: newAllImages,\n        },\n      });\n\n      setFilenames(newFileNames);\n      setAllImages(newAllImages);\n\n      if (counter - 1 >= 0) {\n        setCounter(counter - 1);\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        setAuthModal({\n          isShown: true,\n          ModalTitle: error.response.data.ModalTitle,\n          ModalBody: error.response.data.ModalBody,\n        });\n      } else {\n        setModal({\n          isShown: true,\n          ModalTitle: error.response.data.ModalTitle,\n          ModalBody: error.response.data.ModalBody,\n        });\n      }\n    }\n  };\n\n  const logoutHandler = async () => {\n    var formData = new FormData();\n    formData.append(\"token\", token);\n\n    await axios({\n      url: \"/logout\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      data: formData,\n    });\n    history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"Dashboard\">\n      <div className=\"Dashboard__left Dashboard__container\">\n        {allImages.length > 0 ? (\n          <div>\n            <img src={allImages[counter]} alt=\"\" />\n          </div>\n        ) : (\n          <div className=\"emptyimage\">\n            <h2>No Image to Display</h2>\n          </div>\n        )}\n\n        <i className=\"fa fa-trash\" onClick={deleteImageHandler}></i>\n        <i\n          className=\"fa fa-arrow-left\"\n          onClick={() => {\n            if (allImages.length > 0) {\n              setCounter((counter - 1 + allImages.length) % allImages.length);\n            }\n          }}\n        ></i>\n        <i\n          className=\"fa fa-arrow-right\"\n          onClick={() => {\n            if (allImages.length > 0) {\n              setCounter((counter + 1) % allImages.length);\n            }\n          }}\n        ></i>\n      </div>\n      <div className=\"Dashboard__right\">\n        <input\n          type=\"file\"\n          className=\"form-control customform\"\n          name=\"image\"\n          value={sepImage}\n          onChange={(e) => {\n            setSepImage(e.target.value);\n            setImage(e.target.files[0]);\n          }}\n        />\n        <button\n          type=\"button\"\n          className=\"btn w-100 mt-3 custombutton\"\n          onClick={addImageHandler}\n        >\n          Upload Image\n        </button>\n      </div>\n      <TemplateModal\n        isShown={modal.isShown}\n        setIsShown={setModal}\n        ModalTitle={modal.ModalTitle}\n        ModalBody={modal.ModalBody}\n      />\n      <AuthorizationModal\n        isShown={authmodal.isShown}\n        setIsShown={setAuthModal}\n        ModalTitle={authmodal.ModalTitle}\n        ModalBody={authmodal.ModalBody}\n      />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Modals/TemplateModal.js",[],"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Signup/Signup.js",[],"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Signin/Signin.js",[],"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/PageTemplate/PageTemplate.js",["65","66"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./PageTemplate.css\";\nimport AuthorizationModal from \"../Modals/AuthorizationModal\";\nimport TemplateModal from \"../Modals/TemplateModal\";\n\nconst PageTemplate = (props) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const token = location.state && location.state.token;\n  const [modal, setModal] = useState({\n    isShown: false,\n    ModalTitle: \"\",\n    ModalBody: \"\",\n  });\n  const [authmodal, setAuthModal] = useState({\n    isShown: false,\n    ModalTitle: \"\",\n    ModalBody: \"\",\n  });\n\n  const isAuthorized = async () => {\n    try {\n      var formData = new FormData();\n      formData.append(\"token\", token);\n\n      const response = await axios({\n        url: \"/isvaliduser\",\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        data: formData,\n      });\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        setAuthModal({\n          isShown: true,\n          ModalTitle: error.response.data.ModalTitle,\n          ModalBody: error.response.data.ModalBody,\n        });\n      } else {\n        setModal({\n          isShown: true,\n          ModalTitle: error.response.data.ModalTitle,\n          ModalBody: error.response.data.ModalBody,\n        });\n      }\n    }\n  };\n\n  const editUserHandler = async () => {\n    try {\n      var formData = new FormData();\n      formData.append(\"token\", token);\n\n      const response = await axios({\n        url: \"/fetchuser\",\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        data: formData,\n      });\n\n      history.push({\n        pathname: \"/edituser\",\n        state: {\n          ...location.state,\n          firstname: response.data.firstname,\n          lastname: response.data.lastname,\n          mobile: response.data.mobile,\n          password: response.data.password,\n          email: response.data.email,\n        },\n      });\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        setAuthModal({\n          isShown: true,\n          ModalTitle: error.response.data.ModalTitle,\n          ModalBody: error.response.data.ModalBody,\n        });\n      } else {\n        setModal({\n          isShown: true,\n          ModalTitle: error.response.data.ModalTitle,\n          ModalBody: error.response.data.ModalBody,\n        });\n      }\n    }\n  };\n\n  const logoutHandler = async () => {\n    var formData = new FormData();\n    formData.append(\"token\", token);\n    await axios({\n      url: \"/logout\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      data: formData,\n    });\n    history.push(\"/login\");\n  };\n\n  //Effects\n  useEffect(() => {\n    isAuthorized();\n  }, []);\n\n  return (\n    <div className=\"PageTemplate\">\n      <div className=\"PageTemplate__navbar\">\n        <h5\n          onClick={() => {\n            history.push({\n              pathname: \"/dashboard\",\n              state: {\n                email: location.state.email,\n                token: location.state.token,\n                allImages: location.state.allImages,\n                filenames: location.state.filenames,\n              },\n            });\n          }}\n        >\n          Slideshow\n        </h5>\n\n        <div className=\"PageTemplate__navbar_icons\">\n          <i className=\"fa fa-cog\" onClick={editUserHandler}></i>\n          <i className=\"fa fa-sign-out\" onClick={logoutHandler}></i>\n        </div>\n      </div>\n      <div className=\"PageTemplate__body\">{props.children}</div>\n\n      <TemplateModal\n        isShown={modal.isShown}\n        setIsShown={setModal}\n        ModalTitle={modal.ModalTitle}\n        ModalBody={modal.ModalBody}\n      />\n      <AuthorizationModal\n        isShown={authmodal.isShown}\n        setIsShown={setAuthModal}\n        ModalTitle={authmodal.ModalTitle}\n        ModalBody={authmodal.ModalBody}\n      />\n    </div>\n  );\n};\n\nexport default PageTemplate;\n","/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/Modals/AuthorizationModal.js",[],"/home/sharansaireddykonda/Documents/dynamicimageslideshow/src/components/EditUser/EditUser.js",["67"],"import React, { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport \"./EditUser.css\";\nimport axios from \"axios\";\n\nimport ProfileImage from \"../../assets/images/profile.png\";\nimport TemplateModal from \"../Modals/TemplateModal\";\nimport AuthorizationModal from \"../Modals/AuthorizationModal\";\n\nconst EditUser = () => {\n  //Constants and Variables\n  const location = useLocation();\n  const history = useHistory();\n  const oldemail = location.state && location.state.email;\n\n  const initialState = {\n    firstname: location.state && location.state.firstname,\n    lastname: location.state && location.state.lastname,\n    email: location.state && location.state.email,\n    mobile: location.state && location.state.mobile,\n    password: location.state && location.state.password,\n    confirmpassword: location.state && location.state.password,\n  };\n\n  const initialState2 = {\n    firstname: null,\n    lastname: null,\n    email: null,\n    mobile: null,\n    password: null,\n    confirmpassword: null,\n  };\n\n  //States\n  const [user, setUser] = useState(initialState);\n  const [validUser, setValidUser] = useState(initialState2);\n  const [modal, setModal] = useState({\n    isShown: false,\n    ModalTitle: \"\",\n    ModalBody: \"\",\n  });\n  const [authmodal, setAuthModal] = useState({\n    isShown: false,\n    ModalTitle: \"\",\n    ModalBody: \"\",\n  });\n\n  //Handlers\n  const isChanged = () => {\n    return !(\n      user.firstname === location.state.firstname &&\n      user.lastname === location.state.lastname &&\n      user.email === location.state.email &&\n      user.mobile === location.state.mobile &&\n      user.password === location.state.password &&\n      user.confirmpassword === location.state.password\n    );\n  };\n\n  const setUserHandler = async (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setUser({ ...user, [name]: value });\n  };\n\n  const updateUserHandler = async () => {\n    if (!isChanged()) {\n      setModal({\n        isShown: true,\n        ModalTitle: \"Alert...\",\n        ModalBody: \"No changes made...\",\n      });\n      return;\n    }\n\n    var pattern = /^[A-Za-z]+[A-Za-z ]{4,50}$/i;\n    var firstname = false;\n    var lastname = false;\n    var email = false;\n    var mobile = false;\n    var password = false;\n    var confirmpassword = false;\n\n    firstname = pattern.test(user.firstname);\n    lastname = pattern.test(user.lastname);\n\n    pattern = /^[A-Za-z][A-Za-z0-9.]+@[A-Za-z]{1,20}\\.[A-Za-z]{1,10}$/i;\n    email = pattern.test(user.email);\n\n    pattern = /^\\d{10}$/i;\n    mobile = pattern.test(user.mobile);\n\n    pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*.,])[A-Za-z\\d!@#$%^&*.,]{8,50}$/s;\n    password = pattern.test(user.password);\n    confirmpassword = pattern.test(user.confirmpassword);\n\n    if (password && confirmpassword) {\n      password = user.password === user.confirmpassword;\n      confirmpassword = password;\n    } else {\n      password = false;\n      confirmpassword = false;\n    }\n\n    setValidUser({\n      firstname,\n      lastname,\n      email,\n      mobile,\n      password,\n      confirmpassword,\n    });\n\n    if (\n      [firstname, lastname, email, mobile, password, confirmpassword].every(\n        (value) => value === true\n      )\n    ) {\n      var formData = new FormData();\n      formData.append(\"firstname\", user.firstname);\n      formData.append(\"lastname\", user.lastname);\n      formData.append(\"email\", user.email);\n      formData.append(\"mobile\", user.mobile);\n      formData.append(\"password\", user.password);\n      formData.append(\"oldemail\", oldemail);\n      formData.append(\"token\", location.state && location.state.token);\n\n      try {\n        const response = await axios({\n          url: \"/updateuser\",\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n          data: formData,\n        });\n\n        setAuthModal({\n          isShown: true,\n          ModalTitle: response.data.ModalTitle,\n          ModalBody: response.data.ModalBody,\n        });\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          setAuthModal({\n            isShown: true,\n            ModalTitle: error.response.data.ModalTitle,\n            ModalBody: error.response.data.ModalBody,\n          });\n        } else {\n          setModal({\n            isShown: true,\n            ModalTitle: error.response.data.ModalTitle,\n            ModalBody: error.response.data.ModalBody,\n          });\n        }\n      }\n    }\n  };\n  return (\n    <div className=\"EditUser\">\n      <img\n        src={ProfileImage}\n        alt=\"Profile\"\n        style={{ width: \"15%\", margin: \"0% 40%\" }}\n      />\n\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend d-none d-sm-block\">\n          <span className=\"input-group-text customtext\">First Name</span>\n        </div>\n        <input\n          type=\"text\"\n          className={`form-control ${\n            validUser.firstname === false ? \"invalidform\" : \"customform\"\n          }`}\n          placeholder=\"Enter First Name\"\n          name=\"firstname\"\n          value={user.firstname}\n          onChange={setUserHandler}\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend d-none d-sm-block\">\n          <span className=\"input-group-text customtext\">Last Name</span>\n        </div>\n        <input\n          type=\"text\"\n          className={`form-control ${\n            validUser.lastname === false ? \"invalidform\" : \"customform\"\n          }`}\n          placeholder=\"Enter Last Name\"\n          name=\"lastname\"\n          value={user.lastname}\n          onChange={setUserHandler}\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend d-none d-sm-block\">\n          <span className=\"input-group-text customtext\">Email</span>\n        </div>\n        <input\n          type=\"email\"\n          className={`form-control ${\n            validUser.email === false ? \"invalidform\" : \"customform\"\n          }`}\n          placeholder=\"Enter Email\"\n          name=\"email\"\n          value={user.email}\n          onChange={setUserHandler}\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend d-none d-sm-block \">\n          <span className=\"input-group-text customtext\">Mobile Number</span>\n        </div>\n        <input\n          type=\"text\"\n          className={`form-control ${\n            validUser.mobile === false ? \"invalidform\" : \"customform\"\n          }`}\n          placeholder=\"Enter Mobile Number\"\n          name=\"mobile\"\n          value={user.mobile}\n          onChange={setUserHandler}\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend d-none d-sm-block\">\n          <span className=\"input-group-text customtext\">Password</span>\n        </div>\n        <input\n          type=\"password\"\n          className={`form-control ${\n            validUser.password === false ? \"invalidform\" : \"customform\"\n          }`}\n          placeholder=\"Enter Password\"\n          name=\"password\"\n          value={user.password}\n          onChange={setUserHandler}\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend d-none d-sm-block\">\n          <span className=\"input-group-text customtext\">Confirm Password</span>\n        </div>\n        <input\n          type=\"password\"\n          className={`form-control ${\n            validUser.confirmpassword === false ? \"invalidform\" : \"customform\"\n          }`}\n          placeholder=\"Enter Password Again\"\n          name=\"confirmpassword\"\n          value={user.confirmpassword}\n          onChange={setUserHandler}\n        />\n      </div>\n      <button\n        type=\"button\"\n        onClick={updateUserHandler}\n        className=\"btn w-100 custombutton\"\n      >\n        UPDATE USER\n      </button>\n      <TemplateModal\n        isShown={modal.isShown}\n        setIsShown={setModal}\n        ModalTitle={modal.ModalTitle}\n        ModalBody={modal.ModalBody}\n      />\n      <AuthorizationModal\n        isShown={authmodal.isShown}\n        setIsShown={setAuthModal}\n        ModalTitle={authmodal.ModalTitle}\n        ModalBody={authmodal.ModalBody}\n      />\n    </div>\n  );\n};\n\nexport default EditUser;\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":6,"column":3,"nodeType":"74","messageId":"75","endLine":6,"endColumn":17},{"ruleId":"72","severity":1,"message":"76","line":7,"column":3,"nodeType":"74","messageId":"75","endLine":7,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":118,"column":28,"nodeType":"79","messageId":"80","endLine":118,"endColumn":30},{"ruleId":"72","severity":1,"message":"81","line":174,"column":9,"nodeType":"74","messageId":"75","endLine":174,"endColumn":22},{"ruleId":"72","severity":1,"message":"82","line":30,"column":13,"nodeType":"74","messageId":"75","endLine":30,"endColumn":21},{"ruleId":"83","severity":1,"message":"84","line":114,"column":6,"nodeType":"85","endLine":114,"endColumn":8,"suggestions":"86"},{"ruleId":"72","severity":1,"message":"87","line":13,"column":9,"nodeType":"74","messageId":"75","endLine":13,"endColumn":16},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'startingPartGO' is defined but never used.","Identifier","unusedVar","'endingPartGO' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'logoutHandler' is assigned a value but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAuthorized'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [isAuthorized]",{"range":"93","text":"94"},[2947,2949],"[isAuthorized]"]